set nocompatible        "非兼容vi模式,避免以前版本的一些bug和局限 即使用扩展功能
"set background=dark
set encoding=utf-8
autocmd InsertLeave * se nocul  " 用浅色高亮当前行
autocmd InsertEnter * se cul    " 用浅色高亮当前行

set ruler           " 显示标尺
set nu              " 显示行数
set showcmd         " 显示命令


set autoindent          "自动对齐
set smartindent         "自动选择对齐方式

set incsearch           "一边输入一边自动搜索
set showmatch           "括号自动匹配 输入括号时高亮显示匹配括号
set hls                 "匹配高亮

set expandtab " 把tab转换成空格
set tabstop=4 " 空格数量是4
set bs=2
set shiftwidth=4 " 自动缩进的宽度
set ignorecase smartcase    "忽略大小写 如果有大写则不忽略

au FileType go setl noexpandtab


"au BufNewFile,BufRead *.c set filetype=lpc
" 自动补齐
let s:completions = []
function! CleverTab()
    let cursorpos = getpos('.')
    let cursorcol = cursorpos[2]
    let curr_line = getline('.')
    let curr_pos_pat = '\%' . cursorcol . 'c'

    let cursor_back = "\<C-O>:call setpos('.'," . string(cursorpos) . ")\<CR>"
    for [left, right, completion, restore] in s:completions
        let pattern = left . curr_pos_pat . right
        if curr_line =~ pattern
            if cursorcol == strlen(curr_line)+1 && strlen(completion)==1
                let cursor_back = "\<LEFT>"
            endif
            return completion . (restore ? cursor_back : "")
        endif
    endfor
    if curr_line =~ '\k' . curr_pos_pat
        return "\<C-N>"
    else
        return "\<TAB>"
    endif
endfunction

inoremap <Tab> <C-R>=CleverTab()<CR>

syntax enable
filetype plugin on
filetype indent on
"colorscheme solarized


"禁止备份
set nobackup
set nowritebackup

"共享粘贴板
set clipboard+=unnamed

"文件被串改时候自动载入
set autoread

augroup filetype
    au! BufRead,BufNewFile *.sproto setfiletype sproto
augroup end


"高亮多余空格
highlight RedundantSpaces ctermbg=red guibg=red
match RedundantSpaces /\s\+$\| \+\ze\t\|\t/
match RedundantSpaces /\s\+$/
map <c-]> g<c-]>
set tags=tags;\







